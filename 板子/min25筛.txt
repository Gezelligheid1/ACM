const int N = 200005;
ll n, m, k;
int id1[N], id2[N];
ll sum1[N], sum2[N], w[N], g1[N], g2[N], prime[N];
int vis[N];
int cnt, t, sz;
const ll mod = 1e9 + 7;

void Prime(int n)
{
    for (int i = 2; i <= n; i++)
    {
        if (!vis[i])prime[++cnt] = i;
        for (int j = 1; j <= cnt && i * prime[j] <= n; j++)
        {
            vis[i * prime[j]] = 1;
            if (i % prime[j] == 0)break;
        }
    }
    for (int i = 1; i <= cnt; i++)
    {
        sum1[i] = (sum1[i - 1] + prime[i]) % mod;
        sum2[i] = (sum2[i - 1] + prime[i] * prime[i]) % mod;
    }
}

ll fpow(ll x, ll r)
{
    ll result = 1;
    while (r)
    {
        if (r & 1)result = result * x % mod;
        r >>= 1;
        x = x * x % mod;
    }
    return result;
}

inline ll f1(ll x)// 1 ~ x前缀和
{
    x %= mod;
    return x * (x + 1) / 2 % mod;
}

inline ll f2(ll x)
{
    static const ll inv6 = fpow(6, mod - 2);
    x %= mod;
    return x * (x + 1) % mod * (2 * x + 1) % mod * inv6 % mod;
}

inline int getid(ll x)
{
    if (x <= sz)return id1[x];
    else return id2[n / x];
}

ll S(ll n, int j)
{
    if (prime[j] > n)return 0;
    ll ans = (g2[getid(n)] - sum2[j] - g1[getid(n)] + sum1[j] + 2 * mod) % mod;
    for (int i = j + 1; i <= cnt && prime[i] * prime[i] <= n; i++)
        for (ll e = 1, sp = prime[i]; sp <= n; sp *= prime[i], e++)
            ans = (ans + sp % mod * ((sp - 1) % mod) % mod * (S(n / sp, i) + (e > 1))) % mod;
    return ans;
}

int main()
{
    int p, q, u, v, x, y, z, T;
    cin >> n;
    sz = sqrt(n) + 5;
    Prime(sz);
    for (ll l = 1, r; l <= n; l = r + 1)
    {
        r = n / (n / l);
        w[++t] = n / l;
        g1[t] = f1(w[t]) - 1, g2[t] = f2(w[t]) - 1;//处理g(?, 0)并减去1的影响
        if (w[t] <= sz)id1[w[t]] = t;
        else id2[n / w[t]] = t;
    }
    for (int i = 1; i <= cnt; i++)
        for (int j = 1; j <= t && prime[i] * prime[i] <= w[j]; j++)//注意是prime[i]
        {
            int id = getid(w[j] / prime[i]);
            g1[j] = (g1[j] - prime[i] * (g1[id] - sum1[i - 1]) % mod + mod) % mod;
            g2[j] = (g2[j] - prime[i] * prime[i] % mod * (g2[id] - sum2[i - 1]) % mod + mod) % mod;
        }
    cout << (S(n, 0) + 1) % mod;
    return 0;
}