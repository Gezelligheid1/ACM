//用clion开如下2e7结构体数组会崩溃

const int N = 1000005;
int n, m, k;
int a[N], root[N];
int cnt = 0;
struct node
{
    int l, r, val;
} tree[N*20];

void build(int &node, int l, int r)
{
    node = ++cnt;
    if (l == r)
    {
        tree[node].val = a[l];
        return;
    }
    int m = (l + r) >> 1;
    build(tree[node].l, l, m);
    build(tree[node].r, m + 1, r);
}

void update(int &node, int last, int l, int r, int pos, int v)
{
    node = ++cnt;
    tree[node] = tree[last];
    if (l == r)tree[node].val = v;
    else
    {
        int m = (l + r) >> 1;
        if (pos <= m)update(tree[node].l, tree[last].l, l, m, pos, v);
        else update(tree[node].r, tree[last].r, m + 1, r, pos, v);
    }
}

int query(int node, int l, int r, int pos)
{
    if (l == r)return tree[node].val;
    int m = (l + r) >> 1;
    if (pos <= m)return query(tree[node].l, l, m, pos);
    else return query(tree[node].r, m + 1, r, pos);
}

int main()
{
    int i, j, t, g, p, q, u, v, w, x, y, z, T;
    cin >> n >> m;
    for (i = 1; i <= n; i++)
        scanf("%d", &a[i]);
    build(root[0], 1, n);
    for (i = 1; i <= m; i++)
    {
        int pos, last, val;
        scanf("%d%d%d", &last, &p, &pos);
        if (p == 1)scanf("%d", &val), update(root[i], root[last], 1, n, pos, val);
        else printf("%d\n", query(root[last], 1, n, pos)), root[i] = root[last];
    }
    return 0;
}