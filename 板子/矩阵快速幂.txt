const int N = 200005;
int n, m, k;
int a[N];
const int mod = 998244353;

struct point
{
    ll a[41][41] = {0};

    /*point()//高版本c++直接采用结构体内数组赋值为0，构造函数吃内存
    {
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= n; j++)
                a[i][j] = 0;
    }*/

    friend point operator*(point &u, point &v)
    {
        point ans;
        for (int i = 1; i <= n; i++)
            for (int k = 1; k <= n; k++)
            {
                ll s = u.a[i][k];
                for (int j = 1; j <= n; j++)
                {
                    ans.a[i][j] += s * v.a[k][j];
                    if (ans.a[i][j] >= mod)ans.a[i][j] %= mod;
                }
            }
        return ans;
    }


    point fpow(ll r)
    {
        point x = *this;//一次性可改引用
        point result;
        for (int i = 1; i <= n; i++)
            result.a[i][i] = 1;
        while (r)
        {
            if (r & 1)result = result * x;
            r >>= 1;
            x = x * x;
        }
        return result;
    }
};

int main()
{
    int i, j, t, g, p, q, u, v, w, x, y, z, T;
    cin >> T;
    while (T--)
    {
        cin >> n >> m;
        point x;
        while (m--)
        {
            scanf("%d%d", &u, &v);
            x.a[u][v]++;
        }
        cin >> q;
        while (q--)
        {
            scanf("%d%d%d", &u, &v, &k);
            point y = x.fpow(k);
            printf("%lld\n", y.a[u][v]);
        }
    }
    return 0;
}