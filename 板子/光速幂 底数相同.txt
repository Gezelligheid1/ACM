const int N = 5000005;
int n, m, k;
int a[N];
ll pow1[N], pow2[N];
const ll mod = 998244352;
const int P = sqrt(mod) + 1;

int main()
{
    int i, j, p, q, u, v, w, x, y, z, T;
    cin >> x >> n;
    pow1[0] = 1;
    for (i = 1; i <= P; i++)
        pow1[i] = pow1[i - 1] * x % mod;
    pow2[0] = 1;
    for (i = 1; i <= P + 5; i++)
        pow2[i] = pow2[i - 1] * pow1[P] % mod;
    while (n--)
    {
        scanf("%d", &x);
        printf("%lld ", pow1[x % P] * pow2[x / P] % mod);
    }
    return 0;
}