//拓扑排序优先队列

const int N = 505;
int a[N],in[N];
int n;
vector<int>edge[N];
vector<int>ans;
void solve()
{
    int i, j;
    priority_queue<int, vector<int>, greater<int>>qu;
    for (i = 1; i <= n; i++)
        if (in[i] == 0)qu.push(i);
    while (!qu.empty())
    {
        int x = qu.top(); qu.pop();
        ans.push_back(x);
        for (auto& it : edge[x])
            if (--in[it] == 0)qu.push(it);
    }
    if (ans.size() == n)
    {
        for (i = 0; i < ans.size(); i++)
            printf(" %d" + !i, ans[i]);
        puts("");
    }
    //可能有无解情况
}
int main()
{
    int i, j, k, m, t, g, p, q, w, x, y;
    while (cin >> n >> m)
    {
        ans.clear();
        memset(in, 0, sizeof(in));
        for (i = 0; i <= n; i++)
            edge[i].clear();
        while (m--)
        {
            scanf("%d%d", &x, &y);
            edge[x].push_back(y);
            in[y]++;
        }
        solve();
    }
}