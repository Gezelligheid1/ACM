double a[N][N];
const double eps = 1e-8;

int gauss(int n, double a[][N])
{
    for (int i = 1; i <= n; i++)
    {
        int p = i;
        for (int j = i + 1; j <= n; j++)
            if (fabs(a[j][i]) > fabs(a[p][i]))
                p = j;
        for (int j = 1; j <= n + 1; j++)
            swap(a[i][j], a[p][j]);
        if (a[i][i] == 0)
            return 0;
        for (int j = 1; j <= n; j++)
            if (j != i)
            {
                double tmp = a[j][i] / a[i][i];
                for (int k = i + 1; k <= n + 1; k++)
                    a[j][k] -= a[i][k] * tmp;
            }
    }
    //上述操作结束后，矩阵会变成这样
    /*
    k1*a=e1
    k2*b=e2
    k3*c=e3
    k4*d=e4
    */
    for (int i = 1; i <= n; i++)
    {
        a[i][n + 1] /= a[i][i], a[i][i] = 1;
        if (fabs(a[i][n + 1]) < eps)a[i][n + 1] = 0;
    }
    return 1;
}
