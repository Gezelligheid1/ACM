const int N = 100005;
ll n, m, k;
int a[25];
ll dp[25][2];
int cnt;

ll dfs(int pos, int v, int limit)//v==1表示上一位是4
{
    if (!limit && dp[pos][v] != -1)return dp[pos][v];
    if (!pos)return 1;
    int num = limit ? a[pos] : 9;
    ll ans = 0;
    for (int i = 0; i <= num; i++)
    {
        if (!(v && i == 9))
            ans += dfs(pos - 1, i == 4, limit && i == num);
    }
    if (!limit)dp[pos][v] = ans;
    return ans;
}

ll solve(ll x)
{
    memset(a, 0, sizeof(a));
    cnt = 0;
    if (!x)a[++cnt] = 0;
    while (x)
    {
        a[++cnt] = x % 10;
        x /= 10;
    }
    return dfs(cnt, 0, 1);
}

int main()
{
    int i, j, t, g, p, q, u, v, w, x, y, z, T;
    memset(dp, -1, sizeof(dp));
    cin >> T;
    while (T--)
    {
        cin >> n;
        printf("%lld\n", n + 1 - solve(n));
    }
    return 0;
}